{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/SearchFilter/SearchFilter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","resetState","this","type","pattern","title","required","onChange","htmlFor","Component","Filter","filter","ContactList","contacts","onClick","handleDeleteBtn","map","id","App","addNewContact","contactName","nanoid","normalizedName","toLowerCase","find","contact","alert","deleteContact","prevState","filterContacts","includes","updateFilter","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.403bfc5b.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.resetState();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n           \r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"\">\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n    };\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <div>\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  const handleDeleteBtn = (event) => {\r\n    const { name } = event.target;\r\n    onClick(name);\r\n  };\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p> {name}</p>\r\n          <p> {number}</p>\r\n\r\n          <button\r\n            type=\"button\"\r\n            name={id}\r\n            onClick={handleDeleteBtn}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default ContactList;","import React, { Component } from \"react\";\r\nimport {nanoid} from 'nanoid'\r\nimport ContactForm from \"../ContactForm/ContactForm.jsx\";\r\nimport Filter from \"../SearchFilter/SearchFilter.jsx\";\r\nimport ContactList from \"../ContactList/ContactList.jsx\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addNewContact = (name, number) => {\r\n    const contactName = { name, number, id: nanoid() };\r\n    const normalizedName = name.toLowerCase();\r\n    const duplicateName = this.state.contacts.find(\r\n      (contact) => contact.name.toLowerCase() === normalizedName\r\n    );\r\n\r\n    if (duplicateName) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n    if (name === \"\") {\r\n      alert(`Please type your info in the field. It is empty.`);\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [...contacts, contactName],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  updateFilter = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.filterContacts();\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm onSubmit={this.addNewContact} />\r\n          <h2>Contacts</h2>\r\n          <Filter filter={filter} onChange={this.updateFilter} />\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onClick={this.deleteContact}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}